#SDS Flow/SubFlow is defined 
#
# Configuration File to check Flow based on the TPIE Report File
# It's a simple method for reading the flow without having to parse the entire TPL
# Warning it's not wise to trust TPIE
#
# Format:
# FLOWNAME:
# Followed by Module or SubFlow to search for and identifier [first|last|before|<nothing>]
# removefromcheck - If found remove this module from the Flow to not affect the check
# first - The very first position inthe flow
# last - The very last position in this flow
# rightbefore - Checks that Left Side Module is in the Flow RIGHT AFTER the Right Module
# rightbeforeifexists - Both Modules have to exist but if they exist order is checked
# beforeifexists - Module is before, at any point before, other module in the flow
#     beforeifExists can accept multiple comma seperated modules
# before - Checks that the left side is before the Right side but, doesnt worry about modules between
# <nothing> - Just has to exist in the flow I dont care where
#
# Add more flows as necessary

INIT:
TPI_BASE[first]
#TPI_HVQK
#TPI_GFX_AGG
#TPI_FUSE_CONFIG
#PTH_DIODE
TPI_BIN[last]

MAIN:
TPI_BASE[first]
SDTSTART(SF)
SDTBEGIN(SF)
SDTSTRESS(SF)
SDTEND(SF)
SDTFINAL(SF)[last]

SDTSTART:
TPI_BASE[first]
TPI_BASE[rightbefore:TPI_BIN]
TPI_BIN[rightbefore:TPI_DFF]
#TPI_HVQK[rightbefore:TPI_GFX_AGG]
#TPI_GFX_AGG[rightbefore:TPI_SOAK]
#TPI_SOAK[rightbefore:TPI_EDM]
#TPI_EDM[rightbefore:TPI_VCC]
#TPI_VCC[rightbefore:TPI_VIPR]
#TPI_VIPR[rightbefore:PTH_DIODE]
#PTH_DIODE[rightbefore:DRT_SIUP]
#DRT_SIUP[rightbefore:TPI_SIU]
#TPI_SIU[rightbefore:TPI_FUSE]
#TPI_FUSE[rightbefore:TPI_DFFX]
#TPI_DFFX

SDTBEGIN:
TPI_BIN[first]

SDTSTRESS:
TPI_BIN[first]
TPI_BIN[rightbefore:TPI_HVQK]
#TPI_HVQK[rightbefore:DRT_SIU]
#DRT_SIU

SDTEND:
TPI_BIN[first]

SDTFINAL:
#PTH_DIODE[first]
#PTH_DIODE[rightbefore:TPI_GFX_AGG]
#TPI_GFX_AGG[rightbefore:TPI_BIN]
TPI_BIN[rightbefore:TPI_DFF]
TPI_DFF[last]
