# This is a basic workflow to help you get started with Actions
name: CI
env:
  TARGET: "All"
  pValPath: .\pipeline_scripts\pVal\PrimeValTool.exe
  tosPath: C:\intel\hdmt\hdmtOS_3.10.0.0_Release

on: 
  push:
    branches: 
     - main

#concurrency: 
#  group: tos-validation

jobs:
  Compile:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      #- name: testrun
      #  run:  powershell "dir env:"
      - name: restore
        run:  "dotnet tool restore"
      - name: compile base
        run:  .\pipeline_scripts\CompileAll.cmd Base -ci $env:GITHUB_WORKSPACE
      - name: compile target
        run:  .\pipeline_scripts\CompileAll.cmd $env:TARGET -ci $env:GITHUB_WORKSPACE
      - name: print GITHUB_WORKSPACE
        run:  powershell "echo $env:GITHUB_WORKSPACE"
      #- name: CD into GITHUB_WORKSPACE
      #  run:  powershell "cd $env:GITHUB_WORKSPACE"
      #- name: print GITHUB_ACTION_PATH
      #  run:  powershell "echo $env:GITHUB_ACTION_PATH"        
      #- name: script
      #  run:  python print.py

  UnitTest:
    needs: Compile
    runs-on: self-hosted
    steps:
     - name: Run Unit Tests
       run: .\pipeline_scripts\RunUnitTests.cmd -ci $env:GITHUB_WORKSPACE

  CheckCoverage:
    #needs: UnitTest
    runs-on: self-hosted
    steps:
      - name: Run coverage analysis
        uses: ./.github/actions/coverage
        timeout-minutes: 10
        #max_attempts: 3, not supported, look into workflow: https://hsalem.com/posts/ability-to-rerun-single-jobs-in-github-actions.html
        continue-on-error: true

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: .\logs
          retention-days: 7
         
  PrimeValidation:
    needs: CheckCoverage
    runs-on: self-hosted
    steps:
      - name: List mapped drives
        run:  net use
      - name: Map I:drive 
        run:  'net use I: \\amr.corp.intel.com\ec\proj\mdl\jf\intel /y ; $LASTEXITCODE= 0'
      - name: Run pVal
        run:  powershell $env:pValPath $env:tosPath full -sk
 #   with:
 #     name: my-artifact
 #     path: 
 #       .\logs
 #       .\pVal
 #     retention-days: 3         
 #    #allow_failure: false    
         
  Release:
    needs: PrimeValidation
    runs-on: self-hosted
    steps:
      - name: Print Key
        run: echo "The key is:${{secrets.WIKI_AUTHKEY}}"  
      - name: Print current repo ref
        run: echo $env:GITHUB_REF_NAME         
      - name: Run DocParser
        run: .\pipeline_scripts\DocParser.py
      - name: Run wiki_builder.py
        run: .\pipeline_scripts\wiki_builder.py -commit_ref $env:GITHUB_REF_NAME
      - name: Sleep for 30 seconds
        run: Start-Sleep -s 30
      #- name: Run CopyFolder.cmd
      #  run: .\pipeline_scripts\CopyFolder.cmd $env:GITHUB_REF_NAME
      #- name: Run emailRelease.exe
      #  run: .\pipeline_scripts\emailRelease.exe



















         
